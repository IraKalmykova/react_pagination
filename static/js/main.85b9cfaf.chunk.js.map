{"version":3,"sources":["components/Pagination.js","App.js","index.js"],"names":["classNames","require","Pagination","_ref","page","count","total","perPage","activePage","onPageChange","handlePerPage","countPages","Math","ceil","firstPostOnPage","lastPostOnPage","paginationList","Array","fill","map","item","i","react_default","a","createElement","className","onChange","value","type","pagination__item","pagination__item--prev","pagination__item--disabled","onClick","paginationItem","key","random","pagination__item--active","pagination__item--next","App","state","nexPage","_this$state","_this","setState","event","target","_this$state2","this","components_Pagination","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.85b9cfaf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nconst classNames = require('classnames');\n\nconst Pagination = ({\n  total,\n  perPage,\n  activePage,\n  onPageChange,\n  handlePerPage,\n}) => {\n  const countPages = Math.ceil(total / perPage);\n  const firstPostOnPage = activePage * perPage + 1;\n  const lastPostOnPage = (activePage === countPages - 1)\n    ? total\n    : (activePage + 1) * perPage;\n\n  const setPaginationList = (page, count) => {\n    if (count < 5) {\n      return Array(Math.ceil(total / perPage))\n        .fill(1)\n        .map((item, i) => i + 1);\n    }\n\n    if (page === 1) {\n      return [1, 2, '...', count];\n    }\n\n    if (page === 2) {\n      return [1, 2, 3, '...', count];\n    }\n\n    if (page === 3) {\n      return [1, 2, 3, 4, '...', count];\n    }\n\n    if (page >= 4 && page < count - 2) {\n      return [1, '...', page - 1, page, page + 1, '...', count];\n    }\n\n    return [1, '...', count - 3, count - 2, count - 1, count];\n  };\n\n  const paginationList = setPaginationList(activePage, countPages);\n\n  return (\n    <div className=\"pagination\">\n      <select\n        className=\"pagination__select-per-page\"\n        onChange={handlePerPage}\n        value={perPage}\n      >\n        <option value=\"3\">3</option>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n      </select>\n      <ul className=\"pagination__list\">\n        <li>\n          <button\n            type=\"button\"\n            className={classNames({\n              pagination__item: true,\n              'pagination__item--prev': true,\n              'pagination__item--disabled': activePage === 1,\n            })}\n            onClick={() => onPageChange(activePage - 1)}\n          >\n            Prev\n          </button>\n        </li>\n\n        {paginationList.map((paginationItem, i) => (\n          <li key={Math.random()}>\n            <button\n              type=\"button\"\n              className={classNames({\n                pagination__item: true,\n                'pagination__item--active': activePage === paginationItem,\n                'pagination__item--disabled': paginationItem === '...',\n              })}\n              onClick={() => onPageChange(paginationItem)}\n            >\n              {paginationItem}\n            </button>\n          </li>\n        ))}\n        <li>\n          <button\n            type=\"button\"\n            className={classNames({\n              pagination__item: true,\n              'pagination__item--next': true,\n              'pagination__item--disabled':\n                activePage === countPages,\n            })}\n            onClick={() => onPageChange(activePage + 1)}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n      <div className=\"pagination__info\">\n        {firstPostOnPage}\n        &nbsp;-&nbsp;\n        {lastPostOnPage}\n        &nbsp;of&nbsp;\n        {total}\n      </div>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  handlePerPage: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\nimport Pagination from './components/Pagination';\n\nclass App extends React.Component {\n  state = {\n    total: 42,\n    perPage: 5,\n    activePage: 1,\n  };\n\n  onPageChange = (nexPage) => {\n    const { total, perPage } = this.state;\n    const countPages = Math.ceil(total / perPage);\n\n    if (nexPage >= 1 && nexPage <= countPages) {\n      this.setState({\n        activePage: nexPage,\n      });\n    }\n  }\n\n  handlePerPage = (event) => {\n    this.setState({\n      perPage: event.target.value,\n      activePage: 1,\n    });\n  }\n\n  render() {\n    const {\n      total,\n      perPage,\n      activePage,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Pagination\n          total={total}\n          perPage={perPage}\n          activePage={activePage}\n          onPageChange={this.onPageChange}\n          handlePerPage={this.handlePerPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}